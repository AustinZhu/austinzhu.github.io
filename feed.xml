<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://austinzhu.dev/</id><title>Cybernaut in Lost Planet</title><subtitle>Welcome to my personal website, a subset of the cyberspace.</subtitle> <updated>2022-03-23T10:54:57+09:00</updated> <author> <name>Austin Zhu</name> <uri>https://austinzhu.dev/</uri> </author><link rel="self" type="application/atom+xml" href="https://austinzhu.dev/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://austinzhu.dev/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 Austin Zhu </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>遵从你的内心</title><link href="https://austinzhu.dev/posts/Follow-Your-Heart/" rel="alternate" type="text/html" title="遵从你的内心" /><published>2022-03-22T03:28:02+09:00</published> <updated>2022-03-23T10:54:29+09:00</updated> <id>https://austinzhu.dev/posts/Follow-Your-Heart/</id> <content src="https://austinzhu.dev/posts/Follow-Your-Heart/" /> <author> <name>Austin Zhu</name> </author> <category term="Blogs" /> <summary> Your time is limited, so don’t waste it living someone else’s life. Don’t be trapped by dogma — which is living with the results of other people’s thinking. Don’t let the noise of others’ opinions drown out your own inner voice. And most important, have the courage to follow your heart and intuition. They somehow already know what you truly want to become. Everything else is secondary. ——... </summary> </entry> <entry><title>Morphisms and Objects</title><link href="https://austinzhu.dev/posts/Morphisms-And-Objects/" rel="alternate" type="text/html" title="Morphisms and Objects" /><published>2021-09-28T10:08:21+09:00</published> <updated>2021-09-27T23:10:29+09:00</updated> <id>https://austinzhu.dev/posts/Morphisms-And-Objects/</id> <content src="https://austinzhu.dev/posts/Morphisms-And-Objects/" /> <author> <name>Austin Zhu</name> </author> <category term="Notes" /> <summary> </summary> </entry> <entry><title>Category Basics</title><link href="https://austinzhu.dev/posts/Category-Basics/" rel="alternate" type="text/html" title="Category Basics" /><published>2021-08-25T17:21:04+09:00</published> <updated>2021-10-03T17:20:57+09:00</updated> <id>https://austinzhu.dev/posts/Category-Basics/</id> <content src="https://austinzhu.dev/posts/Category-Basics/" /> <author> <name>Austin Zhu</name> </author> <category term="Notes" /> <summary> It seems inevitable that, after one learned Haskell, there’s a good possibility she will become a victim of category theory. This is a series(hopefully) of notes about category theory. Category Theory is the theory using formal method to study the semantics of cats a language that is spoken by mathematicians, just like Design Pattern is a language spoken by senior software engineers. Of course... </summary> </entry> <entry><title>A Simple REPL For the IMP Language</title><link href="https://austinzhu.dev/posts/A-Simple-REPL-For-the-IMP-Language/" rel="alternate" type="text/html" title="A Simple REPL For the IMP Language" /><published>2020-10-24T20:00:34+09:00</published> <updated>2021-09-27T23:10:29+09:00</updated> <id>https://austinzhu.dev/posts/A-Simple-REPL-For-the-IMP-Language/</id> <content src="https://austinzhu.dev/posts/A-Simple-REPL-For-the-IMP-Language/" /> <author> <name>Austin Zhu</name> </author> <category term="Blogs" /> <summary> IMP is a simple imperative language described in the book The Formal Semantics of Programming Languages. The schema of the language is defined as follows: \[\begin{align*} a:=&amp;amp;n\mid X\mid a_0+a_1\mid a_0-a_1\mid a_0 \times a_1 &amp;amp; ( \text{Aexp})\\ b:=&amp;amp;\textbf{true}\mid\textbf{false}\mid a_0=a_1\mid a_0\leq a_1\mid \neg b\mid b_0 \wedge b_1\mid b_0 \vee b_1&amp;amp; ( \text{Bexp})\\ c:=&amp;a... </summary> </entry> <entry><title>Church Numeral与Haskell中init函数的联系</title><link href="https://austinzhu.dev/posts/Church-Numeral-And-Init-in-Haskell/" rel="alternate" type="text/html" title="Church Numeral与Haskell中init函数的联系" /><published>2020-09-07T10:40:00+09:00</published> <updated>2020-09-07T10:40:00+09:00</updated> <id>https://austinzhu.dev/posts/Church-Numeral-And-Init-in-Haskell/</id> <content src="https://austinzhu.dev/posts/Church-Numeral-And-Init-in-Haskell/" /> <author> <name>Austin Zhu</name> </author> <category term="Blogs" /> <summary> 在学习 Haskell 的过程中，碰到了这样的一道习题：使用fold函数编写一个init函数。通过搜索发现了一个非常优雅的解法： init' [] = error "empty list" init' xs = foldr f (const []) xs id where f x g h = h $ g (x:) 仔细一看，这和 Church Numeral 里的pred可以说非常相似了! Church Numeral Church Numeral 使用高阶函数来表示自然数。定义如下, \[\forall f\space R_f\subseteq D_f\forall x\in D_f:n\space f \space x=f^nx\] 我们可以在此基础上定义一系列运算： \[\begin{align} \text{succ}&amp;amp;:=\lambda n.... </summary> </entry> </feed>
